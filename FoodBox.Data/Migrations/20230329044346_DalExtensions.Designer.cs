// <auto-generated />
using System;
using FoodBox.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FoodBox.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230329044346_DalExtensions")]
    partial class DalExtensions
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FoodBox.Entity.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cf794b4b-ddf3-4dc4-9905-5ad6adfb9cd5"),
                            CreatedBy = "Admin Test",
                            CreatedDate = new DateTime(2023, 3, 29, 7, 43, 45, 641, DateTimeKind.Local).AddTicks(7915),
                            IsDeleted = false,
                            Name = "Çikolata"
                        },
                        new
                        {
                            Id = new Guid("19aa3e6c-b4aa-4e53-998b-dbf0a5750512"),
                            CreatedBy = "Admin Test",
                            CreatedDate = new DateTime(2023, 3, 29, 7, 43, 45, 641, DateTimeKind.Local).AddTicks(7918),
                            IsDeleted = false,
                            Name = "Gofret"
                        });
                });

            modelBuilder.Entity("FoodBox.Entity.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductCode")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<Guid?>("StoreId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("StoreId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("71ffa444-c1c0-45d1-859c-2767d4a75b35"),
                            Brand = "Ülker",
                            CategoryId = new Guid("cf794b4b-ddf3-4dc4-9905-5ad6adfb9cd5"),
                            CreatedBy = "Admin Test",
                            CreatedDate = new DateTime(2023, 3, 29, 7, 43, 45, 641, DateTimeKind.Local).AddTicks(8064),
                            IsDeleted = false,
                            ProductCode = 1,
                            ProductName = "Coko",
                            Stock = 90,
                            StoreId = new Guid("c9cc4f4e-39ee-46c9-b5a6-fcb2674c71c8")
                        },
                        new
                        {
                            Id = new Guid("7ffe2660-14ff-48df-9804-098e5bb3071c"),
                            Brand = "Torku",
                            CategoryId = new Guid("19aa3e6c-b4aa-4e53-998b-dbf0a5750512"),
                            CreatedBy = "Admin Test",
                            CreatedDate = new DateTime(2023, 3, 29, 7, 43, 45, 641, DateTimeKind.Local).AddTicks(8068),
                            IsDeleted = false,
                            ProductCode = 2,
                            ProductName = "Puskevit",
                            Stock = 80,
                            StoreId = new Guid("40888f2b-9891-4fa4-abb2-993e4682fd0b")
                        });
                });

            modelBuilder.Entity("FoodBox.Entity.Entities.Store", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.Property<string>("StoreName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Stores");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c9cc4f4e-39ee-46c9-b5a6-fcb2674c71c8"),
                            Address = "Kartal Atalar mah",
                            CreatedBy = "Admin Test",
                            CreatedDate = new DateTime(2023, 3, 29, 7, 43, 45, 641, DateTimeKind.Local).AddTicks(8136),
                            IsDeleted = false,
                            Phone = 216145,
                            StoreName = "Kartal"
                        },
                        new
                        {
                            Id = new Guid("40888f2b-9891-4fa4-abb2-993e4682fd0b"),
                            Address = "Pendik Dogu mah",
                            CreatedBy = "Admin Test",
                            CreatedDate = new DateTime(2023, 3, 29, 7, 43, 45, 641, DateTimeKind.Local).AddTicks(8138),
                            IsDeleted = false,
                            Phone = 316145,
                            StoreName = "Pendik"
                        });
                });

            modelBuilder.Entity("FoodBox.Entity.Entities.Product", b =>
                {
                    b.HasOne("FoodBox.Entity.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FoodBox.Entity.Entities.Store", "Store")
                        .WithMany("Products")
                        .HasForeignKey("StoreId");

                    b.Navigation("Category");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("FoodBox.Entity.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("FoodBox.Entity.Entities.Store", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
